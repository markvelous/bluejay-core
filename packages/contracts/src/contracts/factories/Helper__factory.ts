/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Helper, HelperInterface } from "../Helper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "savingsAccountAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "getSavingsRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feesEngineAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "collateralType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "getStabilityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "rpow",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106af806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806367b870af146100465780636f32f19f1461007657806382df3339146100a6575b600080fd5b610060600480360381019061005b91906104c6565b6100d6565b60405161006d919061054e565b60405180910390f35b610090600480360381019061008b91906103d6565b61019c565b60405161009d919061054e565b60405180910390f35b6100c060048036038101906100bb9190610425565b6102df565b6040516100cd919061054e565b60405180910390f35b6000836000811461017c5760028406600081146100f5578592506100f9565b8392505b50600283046002850494505b841561017657858602868782041461011c57600080fd5b8181018181101561012c57600080fd5b8581049750600287061561016957878502858982041415891515161561015157600080fd5b8381018181101561016157600080fd5b878104965050505b5050600285049450610105565b50610194565b836000811461018e5760009250610192565b8392505b505b509392505050565b60008084905060008173ffffffffffffffffffffffffffffffffffffffff1663d07900bb866040518263ffffffff1660e01b81526004016101dd9190610533565b604080518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022c919061048a565b50905060008273ffffffffffffffffffffffffffffffffffffffff1663498fb99a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027757600080fd5b505afa15801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610461565b826102ba9190610569565b90506102d381866b033b2e3c9fd0803ce80000006100d6565b93505050509392505050565b6000808390506103798173ffffffffffffffffffffffffffffffffffffffff16636ecd067f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032e57600080fd5b505afa158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610461565b846b033b2e3c9fd0803ce80000006100d6565b91505092915050565b60008135905061039181610634565b92915050565b6000813590506103a68161064b565b92915050565b6000813590506103bb81610662565b92915050565b6000815190506103d081610662565b92915050565b6000806000606084860312156103eb57600080fd5b60006103f986828701610382565b935050602061040a86828701610397565b925050604061041b868287016103ac565b9150509250925092565b6000806040838503121561043857600080fd5b600061044685828601610382565b9250506020610457858286016103ac565b9150509250929050565b60006020828403121561047357600080fd5b6000610481848285016103c1565b91505092915050565b6000806040838503121561049d57600080fd5b60006104ab858286016103c1565b92505060206104bc858286016103c1565b9150509250929050565b6000806000606084860312156104db57600080fd5b60006104e9868287016103ac565b93505060206104fa868287016103ac565b925050604061050b868287016103ac565b9150509250925092565b61051e816105d1565b82525050565b61052d816105fb565b82525050565b60006020820190506105486000830184610515565b92915050565b60006020820190506105636000830184610524565b92915050565b6000610574826105fb565b915061057f836105fb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105b4576105b3610605565b5b828201905092915050565b60006105ca826105db565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61063d816105bf565b811461064857600080fd5b50565b610654816105d1565b811461065f57600080fd5b50565b61066b816105fb565b811461067657600080fd5b5056fea2646970667358221220357c90d22a13ecd45e7c41c134a7f7bb018709d889656d3f76aecd2cfe84560264736f6c63430008040033";

export class Helper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Helper> {
    return super.deploy(overrides || {}) as Promise<Helper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Helper {
    return super.attach(address) as Helper;
  }
  connect(signer: Signer): Helper__factory {
    return super.connect(signer) as Helper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelperInterface {
    return new utils.Interface(_abi) as HelperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Helper {
    return new Contract(address, _abi, signerOrProvider) as Helper;
  }
}
