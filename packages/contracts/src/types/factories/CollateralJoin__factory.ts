/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CollateralJoin,
  CollateralJoinInterface,
} from "../CollateralJoin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "GrantAuthorization",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RevokeAuthorization",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateral",
    outputs: [
      {
        internalType: "contract IToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralType",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "grantAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ledger_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "collateralType_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "collateral_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ledger",
    outputs: [
      {
        internalType: "contract ILedger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "revokeAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shutdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611331806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b48028e311610071578063b48028e31461017b578063d26b3e6e14610197578063d8dfeb45146101b3578063e824600f146101d1578063f3fef3a3146101ef578063fc0e74d11461020b576100b4565b806324ba5884146100b9578063313ce567146100e957806347e7ef241461010757806356397c35146101235780638f2fdb4214610141578063957aa58c1461015d575b600080fd5b6100d360048036038101906100ce9190610ccd565b610215565b6040516100e09190611064565b60405180910390f35b6100f161022d565b6040516100fe9190611064565b60405180910390f35b610121600480360381019061011c9190610d45565b610233565b005b61012b610491565b6040516101389190610f8e565b60405180910390f35b61015b60048036038101906101569190610ccd565b6104b7565b005b6101656105c2565b6040516101729190611064565b60405180910390f35b61019560048036038101906101909190610ccd565b6105c8565b005b6101b160048036038101906101ac9190610cf6565b6106d4565b005b6101bb61096e565b6040516101c89190610fa9565b60405180910390f35b6101d9610994565b6040516101e69190610f3c565b60405180910390f35b61020960048036038101906102049190610d45565b61099a565b005b610213610bd9565b005b60016020528060005260406000206000915090505481565b60055481565b600160065414610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90611044565b60405180910390fd5b60008112156102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390610fe4565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a14ec65b60035484846040518463ffffffff1660e01b815260040161031d93929190610f57565b600060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103ae93929190610edc565b602060405180830381600087803b1580156103c857600080fd5b505af11580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104009190610d81565b61043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043690611024565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c826040516104859190611064565b60405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90610fc4565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167ff68e81b76a46eee883f370815faeeac60926d964ac05f6d7db0cfe7dabad1f8860405160405180910390a250565b60065481565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064090610fc4565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167ff1fb81a1db01a30a631ba89f5c83a43f2c9273aad05ec220f22ce42c02c1684860405160405180910390a250565b600060019054906101000a900460ff16806106fa575060008054906101000a900460ff16155b610739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073090611004565b60405180910390fd5b60008060019054906101000a900460ff161590508015610789576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160068190555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260038190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610daa565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167ff68e81b76a46eee883f370815faeeac60926d964ac05f6d7db0cfe7dabad1f8860405160405180910390a280156109685760008060016101000a81548160ff0219169083151502179055505b50505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b7f80000000000000000000000000000000000000000000000000000000000000008111156109fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f490610fe4565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a14ec65b6003543384610a4990611134565b6040518463ffffffff1660e01b8152600401610a6793929190610f57565b600060405180830381600087803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610af6929190610f13565b602060405180830381600087803b158015610b1057600080fd5b505af1158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190610d81565b610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90611024565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436482604051610bcd9190611064565b60405180910390a25050565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190610fc4565b60405180910390fd5b6000600681905550565b600081359050610c738161129f565b92915050565b600081519050610c88816112b6565b92915050565b600081359050610c9d816112cd565b92915050565b600081359050610cb2816112e4565b92915050565b600081519050610cc7816112e4565b92915050565b600060208284031215610cdf57600080fd5b6000610ced84828501610c64565b91505092915050565b600080600060608486031215610d0b57600080fd5b6000610d1986828701610c64565b9350506020610d2a86828701610c8e565b9250506040610d3b86828701610c64565b9150509250925092565b60008060408385031215610d5857600080fd5b6000610d6685828601610c64565b9250506020610d7785828601610ca3565b9150509250929050565b600060208284031215610d9357600080fd5b6000610da184828501610c79565b91505092915050565b600060208284031215610dbc57600080fd5b6000610dca84828501610cb8565b91505092915050565b610ddc81611090565b82525050565b610deb816110ae565b82525050565b610dfa816110ec565b82525050565b610e0981611110565b82525050565b610e18816110b8565b82525050565b6000610e2b601d8361107f565b9150610e36826111ac565b602082019050919050565b6000610e4e60178361107f565b9150610e59826111d5565b602082019050919050565b6000610e71602e8361107f565b9150610e7c826111fe565b604082019050919050565b6000610e94601e8361107f565b9150610e9f8261124d565b602082019050919050565b6000610eb760178361107f565b9150610ec282611276565b602082019050919050565b610ed6816110e2565b82525050565b6000606082019050610ef16000830186610dd3565b610efe6020830185610dd3565b610f0b6040830184610ecd565b949350505050565b6000604082019050610f286000830185610dd3565b610f356020830184610ecd565b9392505050565b6000602082019050610f516000830184610de2565b92915050565b6000606082019050610f6c6000830186610de2565b610f796020830185610dd3565b610f866040830184610e0f565b949350505050565b6000602082019050610fa36000830184610df1565b92915050565b6000602082019050610fbe6000830184610e00565b92915050565b60006020820190508181036000830152610fdd81610e1e565b9050919050565b60006020820190508181036000830152610ffd81610e41565b9050919050565b6000602082019050818103600083015261101d81610e64565b9050919050565b6000602082019050818103600083015261103d81610e87565b9050919050565b6000602082019050818103600083015261105d81610eaa565b9050919050565b60006020820190506110796000830184610ecd565b92915050565b600082825260208201905092915050565b600061109b826110c2565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110f7826110fe565b9050919050565b6000611109826110c2565b9050919050565b600061111b82611122565b9050919050565b600061112d826110c2565b9050919050565b600061113f826110b8565b91507f80000000000000000000000000000000000000000000000000000000000000008214156111725761117161117d565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f436f6c6c61746572616c4a6f696e2f6e6f742d617574686f72697a6564000000600082015250565b7f436f6c6c61746572616c4a6f696e2f6f766572666c6f77000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f436f6c6c61746572616c4a6f696e2f6661696c65642d7472616e736665720000600082015250565b7f436f6c6c61746572616c4a6f696e2f6e6f742d6c697665000000000000000000600082015250565b6112a881611090565b81146112b357600080fd5b50565b6112bf816110a2565b81146112ca57600080fd5b50565b6112d6816110ae565b81146112e157600080fd5b50565b6112ed816110e2565b81146112f857600080fd5b5056fea26469706673582212205849d21d9a380f0c0689f5d7d53d377760fcdbbaa5db9d4a8366d08afb351af664736f6c63430008040033";

export class CollateralJoin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CollateralJoin> {
    return super.deploy(overrides || {}) as Promise<CollateralJoin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CollateralJoin {
    return super.attach(address) as CollateralJoin;
  }
  connect(signer: Signer): CollateralJoin__factory {
    return super.connect(signer) as CollateralJoin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollateralJoinInterface {
    return new utils.Interface(_abi) as CollateralJoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollateralJoin {
    return new Contract(address, _abi, signerOrProvider) as CollateralJoin;
  }
}
