/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minter, MinterInterface } from "../Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralJoinAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exitCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stablecoinJoinAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exitStablecoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralJoinAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "joinCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stablecoinJoinAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "joinStablecoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "collateralType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ledgerAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "stablecoinJoinAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralJoinAddr",
        type: "address",
      },
      {
        internalType: "int256",
        name: "collateralDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "normalizedDebtDelta",
        type: "int256",
      },
    ],
    name: "transferCollateralAndDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "savingsAccountAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "stablecoinJoinAddr",
        type: "address",
      },
      {
        internalType: "int256",
        name: "debtDelta",
        type: "int256",
      },
    ],
    name: "transferSavings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class Minter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minter> {
    return super.deploy(overrides || {}) as Promise<Minter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Minter {
    return super.attach(address) as Minter;
  }
  connect(signer: Signer): Minter__factory {
    return super.connect(signer) as Minter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new utils.Interface(_abi) as MinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minter {
    return new Contract(address, _abi, signerOrProvider) as Minter;
  }
}
